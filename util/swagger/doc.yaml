swagger: '2.0'
info:
  description: LunchRun
  version: 1.0.0
  title: Lunch Run
  
host: 54.180.89.60
basePath: /
  
paths:
  /auth/signup:
    post:
      summary: 회원가입
      tags: 
      - "Auth"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        200:
          description: "{userId : 회원가입된 유저의 아이디}"
        409:
          description: '{"message" : "email || phone"}'
        500:
          description: '{"message" : "Exception"}'
          
  /auth/login:
    post:
      summary: 로그인 토큰 받아오기
      tags: 
      - "Auth"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: object
          properties:
            email:
              type: string

            password:
              type: string

      responses:
        200:
          description: "{token : 생성된 토큰}"
        403:
          description: '{"message" : "login failed || token failed"}'
        500:
          description: '{"message" : "Exception"}'
          
  /auth/check:
    post:
      summary: 로그인 토큰 체크
      tags: 
      - "Auth"
      parameters:
      - in: "header"
        name: "x-access-token"
        type: string

      responses:
        200:
          description: '{"userInfo": {회원 정보} }'
        403:
          description: '{"message" : "Not Token || invalid token"}'
        500:
          description: '{"message" : "Exception"}'

  /restaurantCategory:
    get:
      summary: 식당 카테고리 정보 리스트
      tags:
      - restaurant_category
      parameters:
      - in: "header"
        name: "x-access-token"
        type: string
      responses:
        200:
          description: "카테고리 리스트"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/restaurant_category"
        403:
          description: '{"message" : "Not Token || invalid token"}'
        500:
          description: '{"message" : "Exception"}'
      security:
        - api_key: []
          
definitions:
  user:
    type: object
    properties:
      email:
        type: string
        format: EMAIL

      password:
        type: string
        format: VARCHAR(45)
        
      alias:
        type: string
        format: VARCHAR(45)
        
      phone:
        type: string
        format: VARCHAR(45)
        pattern: '^\d{3}-\d{4}-\d{4}$'

  restaurant:
    type: object
    properties:
      id:
        type: integer
        uniqueItems: true
        
      name:
        type: string
        format: VARCHAR(45)
        
      floor:
        type: integer
        
      introduction:
        type: string
        default: null
        format: TEXT
        
      lat:
        type: number
        format: FLOAT
        
      lng:
        type: number
        format: FLOAT
      
      address:
        type: string
        format: VARCHAR(255)
        default: null
        
      address_road:
        type: string
        format: VARCHAR(255)
        default: null
      
      category_id:
        type: integer
        $ref: '#/definitions/restaurant_category'

  restaurant_category:
    properties:
      id:
        type: integer
        uniqueItems: true
        
      name:
        type: string
        format: VARCHAR(45)
        
  restaurant_image:
    properties:
      id:
        type: integer
        uniqueItems: true
        
      url:
        type: string
        format: VARCHAR(255)
        
      restaurant_id:
        type: integer
        $ref: '#/definitions/restaurant'

  review:
    properties:
      id:
        type: integer
        uniqueItems: true
      
      create_datetime:
        type: string
        format: DATETIME
        
      delete_datetime:
        type: string
        format: DATETIME
        default: null
      
      rating:
        type: number
        format: FLOAT
        
      comment:
        type: string
        format: TEXT
        default: false
        
      user_id:
        type: integer
        $ref: '#/definitions/user'
      
      restaurant_id:
        type: integer
        $ref: '#/definitions/restaurant'
        
  review_image:
    properties:
      id:
        type: integer
        uniqueItems: true
        
      url:
        type: string
        format: VARCHAR(255)
        
      review_id:
        type: integer
        $ref: '#/definitions/review'
    
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string

